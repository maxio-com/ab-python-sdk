# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper
from maxioadvancedbillingformerlychargifyapi.models.create_reason_code_request import CreateReasonCodeRequest


class ReasonCodesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(ReasonCodesControllerTests, cls).setUpClass()
        cls.controller = cls.client.reason_codes
        cls.response_catcher = cls.controller.http_call_back

    # # Reason Codes Intro
    #
    #ReasonCodes are a way to gain a high level view of why your customers are cancelling the subcription to your product or service.
    #
    #Add a set of churn reason codes to be displayed in-app and/or the Chargify Billing Portal. As your subscribers decide to cancel their subscription, learn why they decided to cancel.
    #
    ### Reason Code Documentation
    #
    #Full documentation on how Reason Codes operate within Chargify can be located under the following links.
    #
    #[Churn Reason Codes](https://chargify.zendesk.com/hc/en-us/articles/4407896775579#churn-reason-codes)
    #
    ### Create Reason Code
    #
    #This method gives a merchant the option to create a reason codes for a given Site.
    def test_create_reason_code(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"reason_code":{"code":"NOTHANKYOU","description":"No thank you!",'
            '"position":5}}', CreateReasonCodeRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_reason_code(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # This method gives a merchant the option to retrieve a list of all of the current churn codes for a given site.
    def test_list_reason_codes(self):
        # Parameters for the API call
        page = 1
        per_page = 20

        # Perform the API call through the SDK function
        result = self.controller.list_reason_codes(page, per_page)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"reason_code":{"id":2,"site_id":2,"code":"LARGE","description":"'
            'This is too complicated","position":1,"created_at":"2017-02-16T16:'
            '49:07-05:00","updated_at":"2017-02-17T16:29:51-05:00"}},{"reason_c'
            'ode":{"id":1,"site_id":2,"code":"CH1","description":"This doesnt m'
            'eet my needs","position":2,"created_at":"2017-02-16T16:48:45-05:00'
            '","updated_at":"2017-02-17T16:29:59-05:00"}},{"reason_code":{"id":'
            '5,"site_id":2,"code":"HAN99","description":"Hard to setup","positi'
            'on":3,"created_at":"2017-02-17T16:29:42-05:00","updated_at":"2017-'
            '02-17T16:29:59-05:00"}}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

