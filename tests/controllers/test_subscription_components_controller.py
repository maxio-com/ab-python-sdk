# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from maxioadvancedbillingformerlychargifyapi.utilities.union_type_lookup import UnionTypeLookUp
from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper


class SubscriptionComponentsControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SubscriptionComponentsControllerTests, cls).setUpClass()
        cls.controller = cls.client.subscription_components
        cls.response_catcher = cls.controller.http_call_back

    # This request will list components applied to each subscription.
    def test_list_subscription_components_for_site(self):
        # Parameters for the API call
        page = 1
        per_page = 20
        sort = 'updated_at'
        direction = None
        date_field = 'updated_at'
        start_date = None
        start_datetime = None
        end_date = None
        end_datetime = None
        subscription_ids = APIHelper.json_deserialize('[1,2,3]')
        price_point_ids = 'not_null'
        product_family_ids = APIHelper.json_deserialize('[1,2,3]')
        include = 'subscription'
        filter_use_site_exchange_rate = True
        filter_currencies = APIHelper.json_deserialize('["EUR","USD"]')
        filter_subscription_states = APIHelper.json_deserialize('["active","canceled"]')
        filter_subscription_date_field = 'updated_at'
        filter_subscription_start_date = None
        filter_subscription_start_datetime = None
        filter_subscription_end_date = None
        filter_subscription_end_datetime = None

        # Perform the API call through the SDK function
        result = self.controller.list_subscription_components_for_site(page, per_page, sort, direction, date_field, start_date, start_datetime, end_date, end_datetime, subscription_ids, price_point_ids, product_family_ids, include, filter_use_site_exchange_rate, filter_currencies, filter_subscription_states, filter_subscription_date_field, filter_subscription_start_date, filter_subscription_start_datetime, filter_subscription_end_date, filter_subscription_end_datetime)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


