# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper
from maxioadvancedbillingformerlychargifyapi.models.create_product_family_request import CreateProductFamilyRequest


class ProductFamiliesControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(ProductFamiliesControllerTests, cls).setUpClass()
        cls.controller = cls.client.product_families
        cls.response_catcher = cls.controller.http_call_back

    # This method will create a Product Family within your Chargify site. Create a Product Family to act as a container for your products, components and coupons.
    #
    #Full documentation on how Product Families operate within the Chargify UI can be located [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405369633421).
    def test_create_product_family(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"product_family":{"name":"Acme Projects","description":"Amazing p'
            'roject management tool"}}', CreateProductFamilyRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.create_product_family(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"product_family":{"id":933860,"name":"Acme Projects","description'
            '":"Amazing project management tool","handle":"acme-projects","acco'
            'unting_code":null}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # This method allows to retrieve a list of Product Families for a site.
    def test_list_product_families(self):
        # Parameters for the API call
        date_field = 'updated_at'
        start_date = None
        end_date = None
        start_datetime = None
        end_datetime = None

        # Perform the API call through the SDK function
        result = self.controller.list_product_families(date_field, start_date, end_date, start_datetime, end_datetime)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('[{"product_family":{"id":37,"name":"Acme Projects","description":n'
            'ull,"handle":"acme-projects","accounting_code":null,"created_at":"'
            '2013-02-20T15:05:51-07:00","updated_at":"2013-02-20T15:05:51-07:00'
            '"}},{"product_family":{"id":155,"name":"Bat Family","description":'
            '"Another family.","handle":"bat-family","accounting_code":null,"cr'
            'eated_at":"2014-04-16T12:41:13-06:00","updated_at":"2014-04-16T12:'
            '41:13-06:00"}}]')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

