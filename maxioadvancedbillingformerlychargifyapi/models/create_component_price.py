# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper


class CreateComponentPrice(object):

    """Implementation of the 'Create Component Price' model.

    TODO: type model description here.

    Attributes:
        starting_quantity (int): TODO: type description here.
        unit_price (str | float | None): The price can contain up to 8 decimal
            places. i.e. 1.00 or 0.0012 or 0.00000065

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "starting_quantity": 'starting_quantity',
        "unit_price": 'unit_price'
    }

    _optionals = [
        'starting_quantity',
        'unit_price',
    ]

    def __init__(self,
                 starting_quantity=APIHelper.SKIP,
                 unit_price=APIHelper.SKIP):
        """Constructor for the CreateComponentPrice class"""

        # Initialize members of the class
        if starting_quantity is not APIHelper.SKIP:
            self.starting_quantity = starting_quantity 
        if unit_price is not APIHelper.SKIP:
            self.unit_price = unit_price 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        starting_quantity = dictionary.get("starting_quantity") if dictionary.get("starting_quantity") else APIHelper.SKIP
        unit_price = APIHelper.deserialize_union_type(UnionTypeLookUp.get('CreateComponentPriceUnitPrice'), dictionary.get('unit_price'), False) if dictionary.get('unit_price') is not None else APIHelper.SKIP
        # Return an object of this model
        return cls(starting_quantity,
                   unit_price)
