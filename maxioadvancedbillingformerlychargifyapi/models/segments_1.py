# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper
from maxioadvancedbillingformerlychargifyapi.models.x_1 import X1


class Segments1(object):

    """Implementation of the 'Segments1' model.

    TODO: type model description here.

    Attributes:
        x (X1): An attribute 'x' would be changed for a number (an index in
            request array) where the error occured.  In this object, the key
            represents the field and the value is an array with error
            messages. In most cases this object would contain just one key.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "x": '\'x\''
    }

    _optionals = [
        'x',
    ]

    def __init__(self,
                 x=APIHelper.SKIP):
        """Constructor for the Segments1 class"""

        # Initialize members of the class
        if x is not APIHelper.SKIP:
            self.x = x 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        x = X1.from_dictionary(dictionary.get('\'x\'')) if '\'x\'' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(x)
