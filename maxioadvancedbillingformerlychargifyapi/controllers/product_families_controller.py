# -*- coding: utf-8 -*-

"""
maxioadvancedbillingformerlychargifyapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from maxioadvancedbillingformerlychargifyapi.api_helper import APIHelper
from maxioadvancedbillingformerlychargifyapi.configuration import Server
from maxioadvancedbillingformerlychargifyapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from maxioadvancedbillingformerlychargifyapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from maxioadvancedbillingformerlychargifyapi.models.product_response import ProductResponse
from maxioadvancedbillingformerlychargifyapi.models.product_family_response import ProductFamilyResponse
from maxioadvancedbillingformerlychargifyapi.exceptions.api_exception import APIException


class ProductFamiliesController(BaseController):

    """A Controller to access Endpoints in the maxioadvancedbillingformerlychargifyapi API."""
    def __init__(self, config):
        super(ProductFamiliesController, self).__init__(config)

    def list_products_for_product_family(self,
                                         product_family_id,
                                         page=1,
                                         per_page=20,
                                         date_field=None,
                                         start_date=None,
                                         end_date=None,
                                         start_datetime=None,
                                         end_datetime=None,
                                         include_archived=None,
                                         include=None,
                                         filter_prepaid_product_price_point_product_price_point_id=None,
                                         filter_use_site_exchange_rate=None):
        """Does a GET request to /product_families/{product_family_id}/products.json.

        This method allows to retrieve a list of Products belonging to a
        Product Family.

        Args:
            product_family_id (int): The Chargify id of the product family to
                which the product belongs
            page (int, optional): Result records are organized in pages. By
                default, the first page of results is displayed. The page
                parameter specifies a page number of results to fetch. You can
                start navigating through the pages to consume the results. You
                do this by passing in a page parameter. Retrieve the next page
                by adding ?page=2 to the query string. If there are no results
                to return, then an empty result set will be returned. Use in
                query `page=1`.
            per_page (int, optional): This parameter indicates how many
                records to fetch in each request. Default value is 20. The
                maximum allowed values is 200; any per_page value over 200
                will be changed to 200. Use in query `per_page=200`.
            date_field (BasicDateFieldEnum, optional): The type of filter you
                would like to apply to your search. Use in query:
                `date_field=created_at`.
            start_date (str, optional): The start date (format YYYY-MM-DD)
                with which to filter the date_field. Returns products with a
                timestamp at or after midnight (12:00:00 AM) in your site’s
                time zone on the date specified.
            end_date (str, optional): The end date (format YYYY-MM-DD) with
                which to filter the date_field. Returns products with a
                timestamp up to and including 11:59:59PM in your site’s time
                zone on the date specified.
            start_datetime (str, optional): The start date and time (format
                YYYY-MM-DD HH:MM:SS) with which to filter the date_field.
                Returns products with a timestamp at or after exact time
                provided in query. You can specify timezone in query -
                otherwise your site's time zone will be used. If provided,
                this parameter will be used instead of start_date.
            end_datetime (str, optional): The end date and time (format
                YYYY-MM-DD HH:MM:SS) with which to filter the date_field.
                Returns products with a timestamp at or before exact time
                provided in query. You can specify timezone in query -
                otherwise your site's time zone will be used. If provided,
                this parameter will be used instead of end_date.
            include_archived (bool, optional): Include archived products
            include (ListProductsIncludeEnum, optional): Allows including
                additional data in the response. Use in query
                `include=prepaid_product_price_point`.
            filter_prepaid_product_price_point_product_price_point_id
                (IncludeNotNullEnum, optional): Allows fetching products only
                if a prepaid product price point is present or not. To use
                this filter you also have to include the following param in
                the request `include=prepaid_product_price_point`. Use in
                query
                `filter[prepaid_product_price_point][product_price_point_id]=no
                t_null`.
            filter_use_site_exchange_rate (bool, optional): Allows fetching
                products with matching use_site_exchange_rate based on
                provided value (refers to default price point). Use in query
                `filter[use_site_exchange_rate]=true`.

        Returns:
            List[ProductResponse]: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/product_families/{product_family_id}/products.json')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('product_family_id')
                            .value(product_family_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('page')
                         .value(page))
            .query_param(Parameter()
                         .key('per_page')
                         .value(per_page))
            .query_param(Parameter()
                         .key('date_field')
                         .value(date_field))
            .query_param(Parameter()
                         .key('start_date')
                         .value(start_date))
            .query_param(Parameter()
                         .key('end_date')
                         .value(end_date))
            .query_param(Parameter()
                         .key('start_datetime')
                         .value(start_datetime))
            .query_param(Parameter()
                         .key('end_datetime')
                         .value(end_datetime))
            .query_param(Parameter()
                         .key('include_archived')
                         .value(include_archived))
            .query_param(Parameter()
                         .key('include')
                         .value(include))
            .query_param(Parameter()
                         .key('filter[prepaid_product_price_point][product_price_point_id]')
                         .value(filter_prepaid_product_price_point_product_price_point_id))
            .query_param(Parameter()
                         .key('filter[use_site_exchange_rate]')
                         .value(filter_use_site_exchange_rate))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ProductResponse.from_dictionary)
            .local_error('404', 'Not Found', APIException)
        ).execute()

    def create_product_family(self,
                              body=None):
        """Does a POST request to /product_families.json.

        This method will create a Product Family within your Chargify site.
        Create a Product Family to act as a container for your products,
        components and coupons.
        Full documentation on how Product Families operate within the Chargify
        UI can be located
        [here](https://maxio-chargify.zendesk.com/hc/en-us/articles/54053696334
        21).

        Args:
            body (CreateProductFamilyRequest, optional): TODO: type
                description here.

        Returns:
            ProductFamilyResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/product_families.json')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ProductFamilyResponse.from_dictionary)
        ).execute()

    def list_product_families(self,
                              date_field=None,
                              start_date=None,
                              end_date=None,
                              start_datetime=None,
                              end_datetime=None):
        """Does a GET request to /product_families.json.

        This method allows to retrieve a list of Product Families for a site.

        Args:
            date_field (BasicDateFieldEnum, optional): The type of filter you
                would like to apply to your search. Use in query:
                `date_field=created_at`.
            start_date (str, optional): The start date (format YYYY-MM-DD)
                with which to filter the date_field. Returns products with a
                timestamp at or after midnight (12:00:00 AM) in your site’s
                time zone on the date specified.
            end_date (str, optional): The end date (format YYYY-MM-DD) with
                which to filter the date_field. Returns products with a
                timestamp up to and including 11:59:59PM in your site’s time
                zone on the date specified.
            start_datetime (str, optional): The start date and time (format
                YYYY-MM-DD HH:MM:SS) with which to filter the date_field.
                Returns products with a timestamp at or after exact time
                provided in query. You can specify timezone in query -
                otherwise your site's time zone will be used. If provided,
                this parameter will be used instead of start_date.
            end_datetime (str, optional): The end date and time (format
                YYYY-MM-DD HH:MM:SS) with which to filter the date_field.
                Returns products with a timestamp at or before exact time
                provided in query. You can specify timezone in query -
                otherwise your site's time zone will be used. If provided,
                this parameter will be used instead of end_date.

        Returns:
            List[ProductFamilyResponse]: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/product_families.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('date_field')
                         .value(date_field))
            .query_param(Parameter()
                         .key('start_date')
                         .value(start_date))
            .query_param(Parameter()
                         .key('end_date')
                         .value(end_date))
            .query_param(Parameter()
                         .key('start_datetime')
                         .value(start_datetime))
            .query_param(Parameter()
                         .key('end_datetime')
                         .value(end_datetime))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ProductFamilyResponse.from_dictionary)
        ).execute()

    def read_product_family(self,
                            id):
        """Does a GET request to /product_families/{id}.json.

        This method allows to retrieve a Product Family via the
        `product_family_id`. The response will contain a Product Family
        object.
        The product family can be specified either with the id number, or with
        the `handle:my-family` format.

        Args:
            id (int): The Chargify id of the product family

        Returns:
            ProductFamilyResponse: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/product_families/{id}.json')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ProductFamilyResponse.from_dictionary)
        ).execute()
